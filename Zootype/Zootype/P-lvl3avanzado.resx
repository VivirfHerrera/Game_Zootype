<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnregres3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>